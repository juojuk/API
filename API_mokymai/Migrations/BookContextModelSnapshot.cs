// <auto-generated />
using System;
using API_mokymai.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APImokymai.Migrations
{
    [DbContext(typeof(BookContext))]
    partial class BookContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("API_mokymai.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Cover")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PublishYear")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Spainito",
                            Cover = 2,
                            PublishYear = 1900,
                            Quantity = 5,
                            Title = "Orange"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Spainito",
                            Cover = 2,
                            PublishYear = 1910,
                            Quantity = 5,
                            Title = "Apple"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Africana",
                            Cover = 2,
                            PublishYear = 1920,
                            Quantity = 5,
                            Title = "Banana"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Italiano",
                            Cover = 2,
                            PublishYear = 1930,
                            Quantity = 5,
                            Title = "Grapes"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Germaner",
                            Cover = 2,
                            PublishYear = 1940,
                            Quantity = 5,
                            Title = "Sausages"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Belaruska",
                            Cover = 2,
                            PublishYear = 1950,
                            Quantity = 5,
                            Title = "Potatoes"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Belaruska",
                            Cover = 2,
                            PublishYear = 1960,
                            Quantity = 5,
                            Title = "Tomato"
                        },
                        new
                        {
                            Id = 8,
                            Author = "Lithuanis",
                            Cover = 2,
                            PublishYear = 1970,
                            Quantity = 5,
                            Title = "Morkos"
                        },
                        new
                        {
                            Id = 9,
                            Author = "Lithuanis",
                            Cover = 2,
                            PublishYear = 1980,
                            Quantity = 5,
                            Title = "Onions"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Lithuanis",
                            Cover = 2,
                            PublishYear = 1990,
                            Quantity = 5,
                            Title = "Aguonos"
                        });
                });

            modelBuilder.Entity("API_mokymai.Models.Measure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MaxBorrowingFee")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MinBorrowingFee")
                        .HasColumnType("TEXT");

                    b.Property<int>("OverdueBorrowings")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReservedBooksLimit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WeeksOfBorrowing")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Measure");
                });

            modelBuilder.Entity("API_mokymai.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("API_mokymai.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CheckOutDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("MeasureId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ReturnDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("MeasureId");

                    b.HasIndex("PersonId");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("API_mokymai.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Member")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("API_mokymai.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("API_mokymai.Models.Person", b =>
                {
                    b.HasOne("API_mokymai.Models.Role", "Role")
                        .WithMany("Persons")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("API_mokymai.Models.Reservation", b =>
                {
                    b.HasOne("API_mokymai.Models.Book", "Book")
                        .WithMany("Reservations")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_mokymai.Models.Measure", "Measure")
                        .WithMany("Reservations")
                        .HasForeignKey("MeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_mokymai.Models.Person", "Person")
                        .WithMany("Reservations")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Measure");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("API_mokymai.Models.Staff", b =>
                {
                    b.HasOne("API_mokymai.Models.Role", "Role")
                        .WithMany("Staff")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("API_mokymai.Models.Book", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("API_mokymai.Models.Measure", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("API_mokymai.Models.Person", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("API_mokymai.Models.Role", b =>
                {
                    b.Navigation("Persons");

                    b.Navigation("Staff");
                });
#pragma warning restore 612, 618
        }
    }
}
